ARG container_registry
# Start from the ubuntu security image
FROM ${container_registry}/securityimagedata:ubuntu-latest
#FROM ubuntu:20.04
ARG github_PAT
ARG ENV
ARG branch_or_tag

# Prevent prompts during installation
ENV DEBIAN_FRONTEND=noninteractive
ENV GHUB_PAT=$github_PAT

COPY . /code
WORKDIR /code

ADD Dockerfile .
RUN apt-get update && apt-get install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    git \
    python3.11 \
    python3-pip \
    python3.11-venv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1
# Create a virtual environment and activate it
RUN python -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"
# install dependencies
RUN pip3 install --upgrade pip setuptools wheel
# install decision engine sdks
RUN pip install --no-cache-dir -r ./requirements.txt
ENV PENV=$ENV
ENV ENV='dev'
ENV ENV=$PENV
# copy the content of the local src directory to the working directory
COPY . .
EXPOSE 5000
CMD python ./main.py --env 'dev'